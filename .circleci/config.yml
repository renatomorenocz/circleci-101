version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: renatomorenocz/circleci-101
    docker:
      - image: circleci/buildpack-deps:stretch
  node:
    docker:
      - image: 'circleci/node:10'

jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
          name: 'Restore Package Cache'
          key: 'dependencies-cache-{{ checksum "yarn.lock" }}'
      - run:
          name: 'Install Dependencies'
          command: yarn
      - save_cache:
          name: 'Save Package Cache'
          key: 'dependencies-cache-{{ checksum "yarn.lock" }}'
          paths:
            - node_modules/
      - run:
          name: Build
          command: 'yarn build'

  lint:
    executor: node
    steps:
      - checkout
      - restore_cache:
          name: 'Restore Package Cache'
          key: 'dependencies-cache-{{ checksum "yarn.lock" }}'
      - run:
          name: Lint
          command: 'yarn lint'
  test:
    executor: node
    steps:
      - checkout
      - restore_cache:
          name: 'Restore Package Cache'
          key: 'dependencies-cache-{{ checksum "yarn.lock" }}'
      - run:
          name: Test
          command: 'yarn test'

  build-docker-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: 'Build Docker image'
          command: |
            IMAGE_TAG="${CIRCLE_BRANCH}-latest"
            docker build -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: 'Archive Docker image'
          command: 'docker save -o image.tar $IMAGE_NAME'
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: 'Load archived Docker image'
          command: 'docker load -i /tmp/workspace/image.tar'
      - run:
          name: 'Publish Docker Image to Docker Hub'
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="${CIRCLE_BRANCH}-latest"
            docker push $IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  build:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - build-docker-image:
          requires:
            - lint
            - test
      - publish-latest:
          requires:
            - build-docker-image
